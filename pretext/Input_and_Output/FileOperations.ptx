<?xml version="1.0"?>
<section xml:id="input_and_-output_file-operations">
  <title>File Operations</title>
  <p>Having created a stream with the declaration above, we can connect it to a file (i.e. open the file) using the member function <c>open(filename)</c>. For example, the following statement will allow the C++ program to open the file called <q>myFile.txt</q>, assuming a file named that exists in the current directory, and connect <c>in_stream</c> to the beginning of the file:</p>
  <pre>in_stream.open("myFile.txt");</pre>
  <p>Once connected, the program can read from that file. Pictorially, this is what happens:</p>
  <figure align="center" xml:id="fig-read-read">
    <image source="Read_Open.jpg" width="50%" alt="image"/>
  </figure>
  <p>the <c>&lt;ofstream&gt;</c> class also has an <c>open(filename)</c> member function, but it is defined differently. Consider the following statement:</p>
  <pre>out_stream.open("anotherFile.txt");</pre>
  <p>Pictorally, we get a stream of data flowing out of the program:</p>
  <figure align="center" xml:id="fig-read-write">
    <image source="Write_Open.jpg" width="50%" alt="image"/>
  </figure>
  <p>Because out_stream is an object of type <c>&lt;ofstream&gt;</c>, connecting it to the file named <q>anotherFile.txt</q> will create that file if it does not exist. If the file <q>anotherFile.txt</q> already exists, it will be wiped and replaced with whatever is fed into the output stream.</p>
  <p>To disconnect the <c>ifstream</c> in_stream from whatever file it opened, we use it's <c>close()</c> member function:</p>
  <pre>in_stream.close();</pre>
  <p>To close the file for <c>out_stream</c>, we use its <c>close()</c> function, which also adds an end-of-file marker to indicate where the end of the file is:</p>
  <pre>out_stream.close();</pre>
  <p>Answer the question below concerning the use of the <c>fstream</c> library:</p>
  <exercise label="stream_library_1">
    <statement>
      <p>Q-1: Say you wanted to add some text to a file that already has important information on it.
            Would it be a good idea to first use <c>ofstream</c> to open the file?</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>Yes, ofstream is required to edit the file.</p>
        </statement>
        <feedback>
          <p>Wrong! Even though it is required for editing files, using ofstream first will cause problems when it opens a file that has previous work saved on it.</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>Yes, using ifstream will wipe the file clean without using ofstream first.</p>
        </statement>
        <feedback>
          <p>Wrong! ifstream is only used to read files, therefore it will never edit the contents of one.</p>
        </feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>No, using ofstream on a file that already has information on it will clear the entire file.</p>
        </statement>
        <feedback>
          <p>Correct!</p>
        </feedback>
      </choice>
      <choice>
        <statement>
          <p>No, ofstream is exclusively used for reading files.</p>
        </statement>
        <feedback>
          <p>Wrong! ifstream is used to read files instead.</p>
        </feedback>
      </choice>
    </choices>
  </exercise>
</section>
