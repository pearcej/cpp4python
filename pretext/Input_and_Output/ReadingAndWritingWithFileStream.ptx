<?xml version="1.0"?>
<section xml:id="input_and_-output_reading-and-writing-with-file-streams">
  <title>Reading and Writing with File Streams</title>
  <p>As file I/O streams work in a similar way to <c>cin</c> and <c>cout</c>, the operators <q>&gt;&gt;</q> and <q>&lt;&lt;</q> perform the same direction of data for files, with the exact same syntax.</p>
  <p>For example, execution of the following statement will write the number 25, a line break, the number 15, and another line break into the out_stream output stream.</p>
  <pre>out_stream &lt;&lt; 25 &lt;&lt; endl;
out_stream &lt;&lt; 15 &lt;&lt; endl;</pre>
  <p>The line break after the value 25 is important because data in a text file is typically seperated by a space, tab, or a line break. Without the line break, the value 2515 will be placed in the file, and subsequent read operations on that file would consider 2515 as a single value. For example, suppose that after the previous statement, the program opens the same file with the input stream in_stream. The following statement would put the number 25 into the variable <c>inputn</c>.</p>
  <pre>int inputn;
in_stream &gt;&gt; inputn;</pre>
</section>
