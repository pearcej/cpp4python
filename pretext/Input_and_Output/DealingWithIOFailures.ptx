<?xml version="1.0"?>
<section xml:id="input_and_-output_dealing-with-i-o-failures">
  <title>Dealing with I/O Failures</title>
  <p>File operations, such as opening and closing files, are often a source of runtime
            errors for various reasons. Well-written programs always should include error checking
            and Handling routines for possible problems dealing with files. Error checking
            and handling generally involves the programmer inserting statements in functions
            that perform I/O to check if any of the operations have failed. In C (the predecessor to C++),
            the system call to open a file returns a value after the function is called.
            A negative number means the operation failed for some reason, which the program can
            check to see if reading from a file is alright. In C++, a simple error checking mechanism
            is provided by the member function <c>fail()</c>:</p>
  <pre>in_stream.fail();</pre>
  <p>This function returns <c>true</c> only if the previous stream operation for in_stream
            was not successful, such as if we tried to open a non-existent file. If a failure has
            occured, in_stream may be in a corrupted state and it is best not to attempt any more
            operations with it.</p>
  <p>The following example code fragment safely quits the program entirely in case an I/O operation fails:</p>
  <raw format="html" xml:space="preserve">&lt;div&gt;
    &lt;iframe height="400px" width="100%" src="https://repl.it/@CodyWMitchell/File-Handling-1?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;
&lt;/div&gt;</raw>
  <p>After opening the <q>myFile.txt</q> file, the <c>if</c> conditional checks to see if there was an error. If so, the program will output the apologetic error message and then exit. The <c>exit(1)</c> function from the library <c>cstdlib</c> enables the program to terminate at that point and have it return a <q>1</q> versus a <q>0</q>, indicating an Error has occurred.</p>
  <p>For more on Error Handling, see section 1.11.</p>
</section>
